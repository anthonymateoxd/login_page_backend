pipeline {
    agent any

    tools {
        // Configure kubectl in Jenkins Global Tool Configuration
        kubectl 'kubectl' 
    }

    environment {
        // Use environment-agnostic kubeconfig handling
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Aplicar Configuración Backend') {
            steps {
                script {
                    echo '🚀 Iniciando despliegue del Backend en Kubernetes...'

                    echo '🧱 Aplicando Deployment...'
                    kubectl('apply -f backend.yaml --validate=false')

                    echo '🌐 Aplicando Service...'
                    kubectl('apply -f backend-service.yaml --validate=false')
                }
            }
        }

        stage('Verificar Despliegue') {
            steps {
                script {
                    echo '🔍 Verificando pods en ejecución...'
                    kubectl('get pods -n default')
                }
            }
        }
    }

    post {
        success {
            echo '✅ Despliegue completado exitosamente.'
        }
        failure {
            echo '❌ Error durante el despliegue del Backend.'
        }
    }
}

// Custom function to handle kubectl commands
def kubectl(String args) {
    if (isUnix()) {
        sh "kubectl ${args}"
    } else {
        bat "kubectl ${args}"
    }
}