pipeline {
    agent any

    environment {
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    // Auto-detect OS and set paths accordingly
                    if (isUnix()) {
                        env.KUBECONFIG = "${env.HOME}/.kube/config"
                    } else {
                        env.KUBECONFIG = "C:\\ProgramData\\Jenkins\\.kube\\config"
                    }
                }
            }
        }

        stage('Aplicar Configuraci√≥n Backend') {
            steps {
                script {
                    echo 'üöÄ Iniciando despliegue del Backend en Kubernetes...'
                    
                    runCommand('kubectl apply -f backend.yaml --validate=false')
                    runCommand('kubectl apply -f backend-service.yaml --validate=false')
                }
            }
        }

        stage('Verificar Despliegue') {
            steps {
                script {
                    echo 'üîç Verificando pods en ejecuci√≥n...'
                    runCommand('kubectl get pods -n default')
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Despliegue completado exitosamente.'
        }
        failure {
            echo '‚ùå Error durante el despliegue del Backend.'
        }
    }
}

// Universal command runner
def runCommand(String command) {
    if (isUnix()) {
        sh command
    } else {
        bat command
    }
}